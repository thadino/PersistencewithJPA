
1)
Describe how we have handled persistence in the last three semesters. The considerations should include all
relevant layers. File IO, Relational Databases, the browsers local storage and cookies.

We have persisted data in the following ways the other semesters:

File IO (save to a document and read from it later).

Relational Database (insert the data to read it later using create & read from the CROD).

Cookies (Creating a cookie on the user's computer with some data so it doesnt have to redo the data creating process everytime).


2)
Explain the Pros & Cons in using an Object Relational Mapping Framework

Pros;
- Reduces amount of code needed to write.
- avoids low level SQL and JDBC code.
- Database and Schema is not dependant on the database (easy to change to another database).
- It allows us to use the OO-paradigm (Object Oriented Paradigm)

cons;
- It can get really confusing as to what is actucally happening in your implementation code.
- Heavy reliance on ORM software has been stated as a major factor in making bad database designs.
- Theres a lot of problems trying to match a object to the database.

3)
Elaborate on some of the problems a ORM tries to solve.
- Take advantage of the good parts in a relational database without leaving all the things OO language does good.
- Make it seem like we only do OO when we actucally manipulate data.
- Less work to do.
 


4)
Explain the basic ÅgcomponentsÅh involved when using JavaÅfs JPA

its covered in three phases:


Phase 1;
the Object data phase contains POJO classes, service interfaces and classes. It is the main business component layer, which has business logic operations and attributes.



Phase 2;

JPA Provider : The vendor product which contains JPA flavor (javax.persistence).

Mapping file : The mapping file (ORM.xml) contains mapping configuration between the data in a POJO class and data in a relational database.

JPA Loader : The JPA loader works like cache memory, which can load the relational grid data. It works like a copy of database to interact with service classes for POJO data (Attributes of POJO class).

Object Grid : The Object grid is a temporary location which can store the copy of relational data, i.e. like a cache memory. All queries against the database is first effected on the data in the object grid. Only after it is committed, it effects the main database.



Phase 3;
The third phase is the Relational data phase. It contains the relational data which is logically connected to the business component.